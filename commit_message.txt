feat: Initial project setup and Google Calendar integration for Ruoff shows

This commit establishes the initial structure and functionality for the RuoffToCal project, which scrapes show information from Live Nation and adds them as events to a Google Calendar.

Key changes include:
- Core scripts:
    - `scrape_ruoff_shows.py`: Main script for scraping and initiating calendar event creation. Includes date/time parsing with timezone awareness (America/New_York) and a default 3-hour event duration.
    - `google_calendar_service.py`: Handles Google Calendar API authentication (OAuth2) and event management.
        - Stores API tokens in `token.json`.
        - Implements duplicate event checking based on event title and start time.
        - Configured to add events to a specific non-primary calendar ID.
- Configuration:
    - `requirements.txt`: Specifies dependencies (google-api-python-client, google-auth-oauthlib, python-dateutil, beautifulsoup4, requests).
    - `.gitignore`: Excludes sensitive files (`credentials.json`, `token.json`) and Python cache directories.
- Project Organization:
    - All project files have been moved into the `C:\CursorAI\Ruoff` directory.

Troubleshooting Notes (Google OAuth2):
- Initial `credentials.json` was created manually due to tool limitations.
- Resolved "Error 400: redirect_uri_mismatch" by adding `http://localhost:5000/` to Authorized redirect URIs in Google Cloud Console for project `outlawsmanagerschedule`.
- Addressed `ValueError: Authorized user info was not in the expected format, missing fields refresh_token.` by:
    1. Manually deleting `token.json`.
    2. Revoking app permissions via Google Account settings (myaccount.google.com/permissions).
    3. Re-running the script to force a fresh OAuth flow, successfully generating a `refresh_token`.

The script now successfully authenticates, adds new events, and correctly identifies/skips existing duplicate events on subsequent runs.
